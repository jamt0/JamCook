[{"C:\\Users\\jamav\\Proyects\\JamCook\\src\\index.tsx":"1","C:\\Users\\jamav\\Proyects\\JamCook\\src\\serviceWorker.ts":"2","C:\\Users\\jamav\\Proyects\\JamCook\\src\\App.tsx":"3","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Welcome\\Welcome.tsx":"4","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Home\\Home.tsx":"5","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\ForgetPassword\\ForgetPassword.tsx":"6","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\SignUp\\SignUp.tsx":"7","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\ForgetPassword\\ForgetPasswordValidate.tsx":"8","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\SignIn\\SignIn.tsx":"9","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\ListRecipes\\ListRecipes.tsx":"10","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\ForgetPassword\\NewPassword.tsx":"11","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Recipe\\Recipe.tsx":"12","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\FoodBasket\\FoodBasket.tsx":"13","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Search\\Search.tsx":"14","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Button\\Button.tsx":"15","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Perfil\\Perfil.tsx":"16","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Explore\\Explore.tsx":"17","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\CardRecipe\\CardRecipe.tsx":"18","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Scaffold\\Scaffold.tsx":"19","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\ImageRecipe\\ImageRecipe.tsx":"20","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\ItemStep\\ItemStep.tsx":"21","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Commentary\\Commentary.tsx":"22","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\ItemIngredient\\ItemIngredient.tsx":"23","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Avatar\\Avatar.tsx":"24","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\ContainerSection\\ContainerSection.tsx":"25","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Center\\Center.tsx":"26","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\TitleRecipe\\TitleRecipe.tsx":"27","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Searcher\\Searcher.tsx":"28","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Slider\\Slider.tsx":"29","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\GridImages\\GridImages.tsx":"30","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\FoodBasket\\FoodBasketAdd.tsx":"31","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Counter\\Counter.tsx":"32"},{"size":470,"mtime":1609042948828,"results":"33","hashOfConfig":"34"},{"size":5358,"mtime":1609042948845,"results":"35","hashOfConfig":"34"},{"size":2522,"mtime":1611795730422,"results":"36","hashOfConfig":"34"},{"size":1741,"mtime":1610928759056,"results":"37","hashOfConfig":"34"},{"size":1885,"mtime":1610074739455,"results":"38","hashOfConfig":"34"},{"size":1804,"mtime":1610077127222,"results":"39","hashOfConfig":"34"},{"size":3430,"mtime":1610077151101,"results":"40","hashOfConfig":"34"},{"size":3303,"mtime":1610077108655,"results":"41","hashOfConfig":"34"},{"size":2469,"mtime":1610076515605,"results":"42","hashOfConfig":"34"},{"size":3995,"mtime":1611795309271,"results":"43","hashOfConfig":"34"},{"size":1826,"mtime":1610077095219,"results":"44","hashOfConfig":"34"},{"size":10709,"mtime":1611369807282,"results":"45","hashOfConfig":"34"},{"size":3992,"mtime":1611800351575,"results":"46","hashOfConfig":"34"},{"size":2929,"mtime":1610486957780,"results":"47","hashOfConfig":"34"},{"size":1287,"mtime":1611800548245,"results":"48","hashOfConfig":"34"},{"size":3814,"mtime":1611364949528,"results":"49","hashOfConfig":"34"},{"size":3556,"mtime":1611364949513,"results":"50","hashOfConfig":"34"},{"size":3868,"mtime":1611369849391,"results":"51","hashOfConfig":"34"},{"size":1409,"mtime":1611364949478,"results":"52","hashOfConfig":"34"},{"size":921,"mtime":1611369925775,"results":"53","hashOfConfig":"34"},{"size":303,"mtime":1611364949459,"results":"54","hashOfConfig":"34"},{"size":4729,"mtime":1611364949423,"results":"55","hashOfConfig":"34"},{"size":1793,"mtime":1611804771378,"results":"56","hashOfConfig":"34"},{"size":585,"mtime":1611364949371,"results":"57","hashOfConfig":"34"},{"size":295,"mtime":1611364949424,"results":"58","hashOfConfig":"34"},{"size":574,"mtime":1611370623008,"results":"59","hashOfConfig":"34"},{"size":303,"mtime":1611364949495,"results":"60","hashOfConfig":"34"},{"size":425,"mtime":1610071932763,"results":"61","hashOfConfig":"34"},{"size":1571,"mtime":1611369798808,"results":"62","hashOfConfig":"34"},{"size":1355,"mtime":1611792241389,"results":"63","hashOfConfig":"34"},{"size":3988,"mtime":1611800345145,"results":"64","hashOfConfig":"34"},{"size":1417,"mtime":1611802194720,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"gpbhne",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jamav\\Proyects\\JamCook\\src\\index.tsx",[],["142","143"],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\serviceWorker.ts",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\App.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Welcome\\Welcome.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Home\\Home.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\ForgetPassword\\ForgetPassword.tsx",["144"],"import {\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst ForgetPassword: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [mail, setMail] = useState(\"\");\r\n\r\n  const handlerForgetPasswordButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/forgetPasswordValidate\");\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Restablecer Contraseña\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 mb-2 max-w-screen-md mx-auto\">\r\n          <Button\r\n            handler={handlerForgetPasswordButton}\r\n            label={\"Restablecer Contraseña\"}\r\n          />\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <p className=\"text-base text-center font-bold mt-6\">\r\n          ¿Has olvidado tu contraseña?{\" \"}\r\n        </p>\r\n        <p className=\"mx-auto mb-4 text-base text-center\">\r\n          Introduce tu dirección de correo electrónico y te enviaremos un enlace\r\n          para restablecer tu contraseña.\r\n        </p>\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Correo Electrónico\r\n          </IonLabel>\r\n          <IonInput\r\n            value={mail}\r\n            type=\"email\"\r\n            autocomplete=\"email\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\SignUp\\SignUp.tsx",["145","146","147"],"import {\r\n  IonItem,\r\n  IonLabel,\r\n  IonInput,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst SignUp: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [mail, setMail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handlerSignInButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/signIn\");\r\n  };\r\n\r\n  const handlerSignUpButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handlerTerminosYCondicionesButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/terminosYCondiciones\");\r\n  };\r\n\r\n  const handlerPoliticaDePrivacidadButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/politicaDePrivacidad\");\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Crear Cuenta\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 max-w-screen-md mx-auto\">\r\n          <Button handler={handlerSignUpButton} label={\"Crear cuenta\"} />\r\n          <div className=\"flex justify-center py-2\">\r\n            <p className=\"mr-1 text-base inline\">¿Ya tienes una cuenta? </p>\r\n            <Button\r\n              handler={handlerSignInButton}\r\n              label={\"Inicia sesión.\"}\r\n              type={\"Link\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Nombres\r\n          </IonLabel>\r\n          <IonInput\r\n            value={name}\r\n            type=\"text\"\r\n            autocomplete=\"name\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Correo Electrónico\r\n          </IonLabel>\r\n          <IonInput\r\n            value={mail}\r\n            type=\"email\"\r\n            autocomplete=\"email\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <IonItem>\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Contraseña\r\n          </IonLabel>\r\n          <IonInput\r\n            value={password}\r\n            type=\"password\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"mt-8 mb-4 text-center\">\r\n            <p className=\"mr-1 text-base inline\">\r\n              Al registrarte, aceptas nuestros\r\n            </p>\r\n            <Button\r\n              handler={handlerTerminosYCondicionesButton}\r\n              label={\"Terminos y condiciones\"}\r\n              type={\"Link\"}\r\n            />\r\n            <p className=\"mx-1 text-base inline\">y</p>\r\n            <Button\r\n              handler={handlerPoliticaDePrivacidadButton}\r\n              label={\"Política de Privacidad.\"}\r\n              type={\"Link\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\ForgetPassword\\ForgetPasswordValidate.tsx",["148"],"import {\r\n  IonInput,\r\n  IonItem,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst ForgetPasswordValidate: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [codigo, setCodigo] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n\r\n  const handlerForgetPasswordValidateButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/newPassword\");\r\n  };\r\n\r\n  const handlerResendMailButton = (e: any) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Restablecer Contraseña\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 mb-2 max-w-screen-md mx-auto\">\r\n          <Button\r\n            handler={handlerForgetPasswordValidateButton}\r\n            label={\"Restablecer Contraseña\"}\r\n          />\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <p className=\"text-base text-center font-bold mt-6\">\r\n          Consulta tu correo\r\n        </p>\r\n        <p className=\"mx-1 mb-4 text-base text-center md:text-left\">\r\n          Introduce codigo de verificación o entra al vinculo que hemos enviado\r\n          a tu correo electrónico.\r\n        </p>\r\n        <IonItem className=\"mt-8 mb-4\">\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[0]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[1]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[2]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[3]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[4]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[5]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n        </IonItem>\r\n        <div className=\"flex justify-end\">\r\n          <Button\r\n            handler={handlerResendMailButton}\r\n            label={\"¿No recibiste el correo?\"}\r\n            type={\"Link\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordValidate;\r\n","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\SignIn\\SignIn.tsx",["149","150"],"import {\r\n  IonItem,\r\n  IonLabel,\r\n  IonInput,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst SignIn: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [mail, setMail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handlerSignInButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handlerSignUpButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handlerForgetPasswordButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/forgetPassword\");\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Inicia sesión\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 max-w-screen-md mx-auto\">\r\n          <Button handler={handlerSignInButton} label={\"Iniciar sesión\"} />\r\n          <div className=\"flex justify-center py-2\">\r\n            <p className=\"mr-1\">¿No tienes una cuenta? </p>\r\n            <Button\r\n              handler={handlerSignUpButton}\r\n              label={\"Registrate.\"}\r\n              type={\"Link\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Correo Electrónico\r\n          </IonLabel>\r\n          <IonInput\r\n            value={mail}\r\n            type=\"email\"\r\n            autocomplete=\"email\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <IonItem>\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Contraseña\r\n          </IonLabel>\r\n          <IonInput\r\n            value={password}\r\n            type=\"password\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <div className=\"flex justify-end pt-6 pb-2\">\r\n          <Button\r\n            handler={handlerForgetPasswordButton}\r\n            label={\"¿Has olvidado tu contraseña?\"}\r\n            type={\"Link\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\ListRecipes\\ListRecipes.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\ForgetPassword\\NewPassword.tsx",["151","152"],"import {\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst NewPassword: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordConfirm, setNewPasswordConfirm] = useState(\"\");\r\n\r\n  const handlerNewPasswordButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Restablecer Contraseña\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 mb-2 max-w-screen-md mx-auto\">\r\n          <Button\r\n            handler={handlerNewPasswordButton}\r\n            label={\"Restablecer Contraseña\"}\r\n          />\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Nueva Contraseña\r\n          </IonLabel>\r\n          <IonInput\r\n            value={newPassword}\r\n            type=\"password\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <IonItem>\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Confirme Contraseña\r\n          </IonLabel>\r\n          <IonInput\r\n            value={newPasswordConfirm}\r\n            type=\"password\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Recipe\\Recipe.tsx",["153","154","155"],"import { IonButton, IonButtons, IonIcon } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport ImageRecipe from \"../../components/ImageRecipe/ImageRecipe\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\nimport {\r\n  star,\r\n  timerOutline,\r\n  nutritionOutline,\r\n  starOutline,\r\n  arrowRedoOutline,\r\n  bookmarkOutline,\r\n  heartOutline,\r\n  speedometerOutline,\r\n} from \"ionicons/icons\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Commentary from \"../../components/Commentary/Commentary\";\r\nimport TitleRecipe from \"../../components/TitleRecipe/TitleRecipe\";\r\nimport ItemIngredient from \"../../components/ItemIngredient/ItemIngredient\";\r\nimport ItemStep from \"../../components/ItemStep/ItemStep\";\r\nimport ContainerSection from \"../../components/ContainerSection/ContainerSection\";\r\nimport Center from \"../../components/Center/Center\";\r\nimport Avatar from \"../../components/Avatar/Avatar\";\r\n\r\nconst receta = {\r\n  pathImg: \"https://picsum.photos/200/300?random=1\",\r\n  avatarUser: \"https://picsum.photos/200/300?random=2\",\r\n  titulo: \"Tacos Mexicanos de Carnitas\",\r\n  nameUser: \"Jonathan Mancera\",\r\n  valoracion: [1, 1, 1, 1, 0],\r\n  numeroValoraciones: \"78\",\r\n  introduccion:\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum. Phasellus ex justo, gravida vitae nisl vitae, iaculis placerat massa.\",\r\n  ingredientes: [\r\n    {\r\n      name: \"Zanahoria\",\r\n      pathImg: \"https://picsum.photos/200/300?random=3\",\r\n      cantidadPorcion: \"3\",\r\n    },\r\n    {\r\n      name: \"Tomate\",\r\n      pathImg: \"https://picsum.photos/200/300?random=4\",\r\n      cantidadPorcion: \"3\",\r\n    },\r\n    {\r\n      name: \"Pechuga de Pollo\",\r\n      pathImg: \"https://picsum.photos/200/300?random=5\",\r\n      cantidadPorcion: \"3\",\r\n    },\r\n    {\r\n      name: \"Arroz\",\r\n      pathImg: \"https://picsum.photos/200/300?random=6\",\r\n      cantidadPorcion: \"3\",\r\n    },\r\n  ],\r\n  pasos: [\r\n    {\r\n      instruccion:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n    {\r\n      instruccion:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n    {\r\n      instruccion:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n    {\r\n      instruccion:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n  ],\r\n  trucos: [\r\n    {\r\n      instruccion:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n    {\r\n      instruccion:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Recipe: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [porciones, setPorciones] = useState(1);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [classPorciones, setClassPorciones] = useState(\" \");\r\n  const [isEstrellas, setEstrellas] = useState([\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (porciones == 1) {\r\n      setClassPorciones(\" bg-opacity-25 \");\r\n      setIsDisabled(true);\r\n    } else {\r\n      setClassPorciones(\" \");\r\n      setIsDisabled(false);\r\n    }\r\n  }, [porciones]);\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  const handlerShare = (e: any) => {};\r\n\r\n  const handlerLike = (e: any) => {};\r\n\r\n  const handlerMark = (e: any) => {};\r\n\r\n  const handlerSuma = (e: any) => {\r\n    setPorciones(porciones + 1);\r\n  };\r\n\r\n  const handlerResta = (e: any) => {\r\n    setPorciones(porciones - 1);\r\n  };\r\n\r\n  const handlerRecetaHecha = (e: any) => {};\r\n\r\n  const handlerValoracion = (e: any, index: number) => {\r\n    e.preventDefault();\r\n    var newEstrellas = [...isEstrellas];\r\n    newEstrellas.map((estrella, i) => {\r\n      if (i <= index) {\r\n        newEstrellas[i] = true;\r\n      } else {\r\n        newEstrellas[i] = false;\r\n      }\r\n    });\r\n    setEstrellas(newEstrellas);\r\n    return undefined;\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      onClickBack={handlerGoBackButton}\r\n      accionesHeader={\r\n        <>\r\n          <IonButton onClick={handlerShare}>\r\n            <IonIcon slot=\"icon-only\" icon={arrowRedoOutline} color=\"dark\" />\r\n          </IonButton>\r\n          <IonButton onClick={handlerLike}>\r\n            <IonIcon slot=\"icon-only\" icon={heartOutline} color=\"dark\" />\r\n          </IonButton>\r\n          <IonButton onClick={handlerMark}>\r\n            <IonIcon slot=\"icon-only\" icon={bookmarkOutline} color=\"dark\" />\r\n          </IonButton>\r\n        </>\r\n      }\r\n    >\r\n      {/* Portada Receta*/}\r\n      <ImageRecipe pathImg={receta.pathImg} height={\"72\"} sinRedondeo={true}>\r\n        <h6 className=\"text-white text-center text-2xl mx-auto my-auto\">\r\n          {receta.titulo}\r\n        </h6>\r\n      </ImageRecipe>\r\n\r\n      <div className=\"max-w-screen-md mx-auto\">\r\n        {/* Encabezado Receta*/}\r\n        <ContainerSection>\r\n          <Center direccion=\"col\" className=\"mt-4\">\r\n            <Avatar avatarUser={receta.avatarUser} tamaño=\"8\"/>\r\n            <h2 className=\"text-sm mt-2 font-bold\">{receta.nameUser}</h2>\r\n            <Center direccion=\"row\" className=\"mt-2\">\r\n              {receta.valoracion.map((element, index) => {\r\n                return (\r\n                  <IonIcon\r\n                    key={index}\r\n                    icon={element == 1 ? star : starOutline}\r\n                    className=\"text-purple-500 text-sm ml-1\"\r\n                  />\r\n                );\r\n              })}\r\n            </Center>\r\n            <h2 className=\"text-sm mt-2\">\r\n              {receta.numeroValoraciones + \" Valoraciones\"}\r\n            </h2>\r\n          </Center>\r\n        </ContainerSection>\r\n\r\n        {/* Introduccion Receta*/}\r\n        <ContainerSection>\r\n          <Center direccion=\"col\">\r\n            <TitleRecipe>Introducción</TitleRecipe>\r\n            <p className=\"text-center\">{receta.introduccion}</p>\r\n          </Center>\r\n        </ContainerSection>\r\n\r\n        {/* Información Receta en iconos*/}\r\n        <ContainerSection>\r\n          <div className=\"grid grid-cols-3\">\r\n            <Center direccion=\"row\">\r\n              <IonIcon\r\n                icon={nutritionOutline}\r\n                className=\"text-black text-lg mr-1\"\r\n              />\r\n              <h3 className=\"text-sm\">8 ingredientes</h3>\r\n            </Center>\r\n            <Center direccion=\"row\">\r\n              <IonIcon\r\n                icon={speedometerOutline}\r\n                className=\"text-black text-lg mr-1\"\r\n              />\r\n              <h3 className=\"text-sm\">Dificultad</h3>\r\n            </Center>\r\n            <Center direccion=\"row\">\r\n              <IonIcon\r\n                icon={timerOutline}\r\n                className=\"text-black text-lg mr-1\"\r\n              />\r\n              <h3 className=\"text-sm\">25 minutos</h3>\r\n            </Center>\r\n          </div>\r\n        </ContainerSection>\r\n\r\n        {/* Porciones Receta*/}\r\n        <ContainerSection>\r\n          <Center direccion=\"col\">\r\n            <TitleRecipe>Porciones a Preparar</TitleRecipe>\r\n            <Center direccion=\"row\" className=\"md:w-1/2 w-full\">\r\n              <button\r\n                className={\r\n                  \"bg-purple-500 h-12 w-12 rounded-l-md\" + classPorciones\r\n                }\r\n                onClick={handlerResta}\r\n                disabled={isDisabled}\r\n              >\r\n                <p className=\"text-white\">{\"<\"}</p>\r\n              </button>\r\n              <Center direccion=\"col\" className=\"w-full bg-gray-100 h-12\">\r\n                <h3 className=\"text-black text-center\">{porciones}</h3>\r\n              </Center>\r\n              <button\r\n                className=\"bg-purple-500 h-12 w-12 rounded-r-md\"\r\n                onClick={handlerSuma}\r\n              >\r\n                <p className=\"text-white\">{\">\"}</p>\r\n              </button>\r\n            </Center>\r\n          </Center>\r\n        </ContainerSection>\r\n\r\n        {/* Ingredientes Receta*/}\r\n\r\n        <ContainerSection>\r\n          <TitleRecipe>Ingredientes</TitleRecipe>\r\n          {receta.ingredientes.map((ingrediente, index) => {\r\n            return (\r\n              <ItemIngredient\r\n                key={index}\r\n                pathImg={ingrediente.pathImg}\r\n                name={ingrediente.name}\r\n                cantidadPorcion={ingrediente.cantidadPorcion}\r\n              />\r\n            );\r\n          })}\r\n        </ContainerSection>\r\n\r\n        {/* Pasos Receta*/}\r\n        <ContainerSection>\r\n          <TitleRecipe>Pasos</TitleRecipe>\r\n          {receta.pasos.map((paso, index) => {\r\n            return <ItemStep key={index}>{paso.instruccion}</ItemStep>;\r\n          })}\r\n        </ContainerSection>\r\n\r\n        {/* Trucos Receta*/}\r\n        <ContainerSection>\r\n          <TitleRecipe>Trucos y Consejos</TitleRecipe>\r\n          {receta.trucos.map((truco, index) => {\r\n            return <ItemStep key={index}>{truco.instruccion}</ItemStep>;\r\n          })}\r\n        </ContainerSection>\r\n\r\n        {/* Receta Hecha*/}\r\n        <ContainerSection>\r\n          <TitleRecipe>¿Ya has hecho la receta?</TitleRecipe>\r\n          <Center direccion=\"col\" className=\"w-2/3 mx-auto\">\r\n            <Button\r\n              handler={handlerRecetaHecha}\r\n              label={\"¡Receta Hecha!\"}\r\n              type={\"Secundario\"}\r\n            />\r\n          </Center>\r\n        </ContainerSection>\r\n\r\n        {/* Valoración Hecha*/}\r\n        <ContainerSection>\r\n          <TitleRecipe>¿Te ha gustado la receta?</TitleRecipe>\r\n          <Center direccion=\"row\">\r\n            {isEstrellas.map((isEstrella, index) => {\r\n              return (\r\n                <IonButtons slot=\"icon-only\" className=\"h-12 w-12\" key={index}>\r\n                  <IonButton\r\n                    onClick={(e) => handlerValoracion(e, index)}\r\n                    className=\"h-12 w-12\"\r\n                  >\r\n                    <IonIcon\r\n                      icon={isEstrella ? star : starOutline}\r\n                      className=\"text-purple-500 text-4xl h-12 w-12\"\r\n                    />\r\n                  </IonButton>\r\n                </IonButtons>\r\n              );\r\n            })}\r\n          </Center>\r\n        </ContainerSection>\r\n\r\n        {/* Comentarios Receta*/}\r\n        <Commentary />\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\FoodBasket\\FoodBasket.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Search\\Search.tsx",["156"],"import { IonContent, IonPage } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Slider from \"../../components/Slider/Slider\";\r\nimport Searcher from \"../../components/Searcher/Searcher\";\r\n\r\nconst imagenes = [\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=1\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=2\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=3\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=4\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=5\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=6\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=7\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n];\r\n\r\nconst Search: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [slidesPerView, setslidesPerView] = useState(1.5);\r\n\r\n  function handleResize() {\r\n    setWidth(window.innerWidth);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    if (width >= 568) {\r\n      setslidesPerView(2.5);\r\n    } else {\r\n      setslidesPerView(1.5);\r\n    }\r\n    if (width >= 768) {\r\n      setslidesPerView(3.5);\r\n    }\r\n    if (width >= 1024) {\r\n      setslidesPerView(4.5);\r\n    }\r\n    if (width >= 1280) {\r\n      setslidesPerView(5.5);\r\n    }\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize)\r\n    }\r\n  }, [width, slidesPerView]);\r\n\r\n  //Esto debe tener una solucion mejor\r\n  useEffect(() => {\r\n    setWidth(width+1);\r\n    setTimeout(handleResize,1000);\r\n    setTimeout(handleResize,3000);\r\n    setTimeout(handleResize,5000);\r\n    setTimeout(handleResize,10000);\r\n  }, []);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent>\r\n        <div className=\"flex flex-col max-w-screen-md mx-auto pt-8 text-center text-gray-600 text-2xl md:text-3xl font-bold\">\r\n          <h6>Las mejores recetas,</h6>\r\n          <h6>con lo que tienes a mano</h6>\r\n        </div>\r\n        <Searcher placeHolder={\"Buscar recetas con tus ingredientes\"} />\r\n        <div className=\"px-2\">\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Button\\Button.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Perfil\\Perfil.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\Explore\\Explore.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\CardRecipe\\CardRecipe.tsx",["157"],"import React, { FunctionComponent, useState } from \"react\";\r\nimport {\r\n  star,\r\n  timerOutline,\r\n  nutritionOutline,\r\n  starOutline,\r\n  arrowRedoOutline,\r\n  bookmarkOutline,\r\n  bookmark,\r\n  heartOutline,\r\n  heart,\r\n} from \"ionicons/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IonButton, IonButtons, IonCard, IonIcon } from \"@ionic/react\";\r\nimport ImageRecipe from \"../ImageRecipe/ImageRecipe\";\r\nimport Avatar from \"../Avatar/Avatar\";\r\n\r\ninterface Props {\r\n  avatarUser: string;\r\n  nameUser: string;\r\n  titulo: string;\r\n  pathImg: string;\r\n  meGusta: string;\r\n  valoracion: number[];\r\n}\r\n\r\nconst CardRecipe: FunctionComponent<Props> = ({\r\n  avatarUser,\r\n  nameUser,\r\n  titulo,\r\n  pathImg,\r\n  valoracion,\r\n  meGusta,\r\n}) => {\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [isMarked, setIsMarked] = useState(false);\r\n\r\n  const handlerLikeButton = (e: any) => {\r\n    e.preventDefault();\r\n    setIsLiked(!isLiked);\r\n  };\r\n  const handlerShareButton = (e: any) => {\r\n    e.preventDefault();\r\n  };\r\n  const handlerFavButton = (e: any) => {\r\n    e.preventDefault();\r\n    setIsMarked(!isMarked);\r\n  };\r\n\r\n  return (\r\n    <IonCard>\r\n      <Link to=\"/recipe\" className=\"w-full\">\r\n        <div className=\"grid grid-flow-col mx-2 my-1\">\r\n          <div className=\"flex flex-row\">\r\n            <Avatar avatarUser={avatarUser} tamaño=\"8\" />\r\n            <h2 className=\"text-lg ml-2 mt-1\">{nameUser}</h2>\r\n          </div>\r\n          <div className=\"justify-self-end grid grid-flow-col mt-1\">\r\n            <IonIcon\r\n              icon={nutritionOutline}\r\n              className=\"text-black text-base mt-1 mr-1\"\r\n            />\r\n            <h3 className=\"text-lg mr-3\">8</h3>\r\n            <IonIcon\r\n              icon={timerOutline}\r\n              className=\"text-black text-base mt-1 mr-1\"\r\n            />\r\n            <h3 className=\"text-lg\">25'</h3>\r\n          </div>\r\n        </div>\r\n        <ImageRecipe pathImg={pathImg} height={\"60\"} sinRedondeo={true}>\r\n          <div className=\"flex flex-row\">\r\n            {valoracion.map((element, index) => {\r\n              return (\r\n                <IonIcon\r\n                  key={index}\r\n                  icon={element == 1 ? star : starOutline}\r\n                  className=\"text-white text-xl self-end ml-1\"\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <h6 className=\"text-white text-base md:text-xl text-left mx-1 mt-1\">\r\n            {titulo}\r\n          </h6>\r\n        </ImageRecipe>\r\n        <div className=\"grid grid-flow-col mx-2 my-1 py-1\">\r\n          <div className=\"flex flex-row\">\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={handlerShareButton}>\r\n                <IonIcon\r\n                  icon={arrowRedoOutline}\r\n                  className=\"text-gray-500 text-4xl my-auto -ml-2 -mr-2\"\r\n                />\r\n              </IonButton>\r\n            </IonButtons>\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={handlerLikeButton}>\r\n                <IonIcon\r\n                  icon={isLiked ? heart : heartOutline}\r\n                  className=\"text-gray-500 text-4xl my-auto -ml-2 -mr-1\"\r\n                />\r\n              </IonButton>\r\n            </IonButtons>\r\n            <h3 className=\"text-xl my-px inline-block align-baseline pt-1\">\r\n              {meGusta}\r\n            </h3>\r\n          </div>\r\n          <div className=\"justify-self-end grid grid-flow-col\">\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={handlerFavButton}>\r\n                <IonIcon\r\n                  icon={isMarked ? bookmark : bookmarkOutline}\r\n                  className=\"text-gray-500 text-4xl -ml-2 -mr-2\"\r\n                />\r\n              </IonButton>\r\n            </IonButtons>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </IonCard>\r\n  );\r\n};\r\n\r\nexport default CardRecipe;\r\n","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Scaffold\\Scaffold.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\ImageRecipe\\ImageRecipe.tsx",["158"],"import { IonSearchbar } from \"@ionic/react\";\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\ninterface Props {\r\n  sinRedondeo?: boolean; \r\n  pathImg: string;\r\n  height: string;\r\n  width?: string;\r\n}\r\n\r\nconst ImageRecipe: FunctionComponent<Props> = ({\r\n  pathImg,\r\n  children,\r\n  height,\r\n  width = \"full\",\r\n  sinRedondeo = false, \r\n}) => {\r\n  const redondeo = sinRedondeo ? \" \" : \" rounded-md \"\r\n  return (\r\n    <div className=\"relative flex\">\r\n      {children != null && (\r\n        <div className={\"self-end absolute m-auto z-20 grid grid-flow-row\" + redondeo + \"bg-black bg-opacity-50 h-20 w-full px-2\"}>\r\n          {children}\r\n        </div>\r\n      )}\r\n      <div\r\n        className={\"h-\" + height + \" w-\" + width + \" bg-cover bg-center z-10\" + redondeo + \"bg-gray-500 bg-opacity-50\"}\r\n        style={{ backgroundImage: `url( ${pathImg} )` }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageRecipe;\r\n","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\ItemStep\\ItemStep.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Commentary\\Commentary.tsx",["159","160"],"import { IonContent } from '@ionic/react';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\ninterface Props {\r\n}\r\nconst Usuario = {\r\n\r\n    avatarUser: \"https://picsum.photos/200/300?random=1\",\r\n    nombreUsuario: \"Leonardo Santos Franco\",\r\n    fechaPublicacion: \"Hace 4 dias\",\r\n    comentariosUsuario: \"Me encanta los platos a la carta como la langosta, camarones, y creo que el señor ingeniero mancera le falto implementarlo, ojo osino me vere obligado a desinstalar la app.\",\r\n\r\n}\r\nconst Commentary: FunctionComponent<Props> = ({ }) => {\r\n    const estrellas = {\r\n        valoracionEstrella: [1,1,1,0,0],\r\n    };\r\n    return (\r\n        <>\r\n            <h2><div className=\"text-lg font-bold text-center mb-3 mt-3 p-8\">\r\n                Comentarios\r\n               </div>\r\n            </h2>\r\n            <div className=\"grid grid-cols-1 divide-y divide-black-500 \">\r\n\r\n            <div className=\"md:flex md:auto-cols-max md:grid md:grid-cols-2 max-w-screen-md md:flex md:mx-auto md:mx-4 md:p-4 \">\r\n                <div className=\"flex\">\r\n                    <div\r\n                        className=\" md:grid h-8 w-8 md:h-12 md:w-12 bg-cover bg-center md:rounded-md mx-4 p-8\"\r\n                        style={{ backgroundImage: `url( ${Usuario.avatarUser} )` }}\r\n                    ></div>\r\n                    <div className=\"md:grid md:grid-rows-2 md:grid-col-2 md:flex md:gap-1 text-justify\">\r\n                        <h2 className=\"font-bold text-xl\">{Usuario.nombreUsuario}</h2>\r\n                        <h3 className=\"text-xs\">{Usuario.fechaPublicacion}</h3>\r\n                        <h3 className=\"text-xs\">{Usuario.comentariosUsuario}</h3>\r\n                        <div className=\"item-inner-highlight\">{estrellas.valoracionEstrella}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"md:flex md:auto-cols-max md:grid md:grid-cols-2 max-w-screen-md md:flex md:mx-auto md:mx-4 md:p-4\">\r\n                <div className=\"flex\">\r\n                    <div\r\n                        className=\" md:grid h-8 w-8 md:h-12 md:w-12 bg-cover bg-center md:rounded-md mx-4 p-8\"\r\n                        style={{ backgroundImage: `url( ${Usuario.avatarUser} )` }}\r\n                    ></div>\r\n                    <div className=\"md:grid md:grid-rows-2 md:grid-col-2 md:flex md:gap-1 text-justify\">\r\n                        <h2 className=\"font-bold text-xl\">{Usuario.nombreUsuario}</h2>\r\n                        <h3 className=\"text-xs\">{Usuario.fechaPublicacion}</h3>\r\n                        <h3 className=\"text-xs\">{Usuario.comentariosUsuario}</h3>\r\n                        <div className=\"item-inner-highlight\">......</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"md:flex md:auto-cols-max md:grid md:grid-cols-2 max-w-screen-md md:flex md:mx-auto md:mx-4 md:p-4\">\r\n                <div className=\"flex\">\r\n                    <div\r\n                        className=\" md:grid h-8 w-8 md:h-12 md:w-12 bg-cover bg-center md:rounded-md mx-4 p-8\"\r\n                        style={{ backgroundImage: `url( ${Usuario.avatarUser} )` }}\r\n                    ></div>\r\n                    <div className=\"md:grid md:grid-rows-2 md:grid-col-2 md:flex md:gap-1 text-justify\">\r\n                        <h2 className=\"font-bold text-xl\">{Usuario.nombreUsuario}</h2>\r\n                        <h3 className=\"text-xs\">{Usuario.fechaPublicacion}</h3>\r\n                        <h3 className=\"text-xs\">{Usuario.comentariosUsuario}</h3>\r\n                        <div className=\"item-inner-highlight\">......</div>\r\n                        \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"md:flex md:auto-cols-max md:grid md:grid-cols-2 max-w-screen-md md:flex md:mx-auto md:mx-4 md:p-4\">\r\n                <div className=\"flex\">\r\n                    <div\r\n                        className=\" md:grid h-8 w-8 md:h-12 md:w-12 bg-cover bg-center md:rounded-md mx-4 p-8\"\r\n                        style={{ backgroundImage: `url( ${Usuario.avatarUser} )` }}\r\n                    ></div>\r\n                    <div className=\"md:grid md:grid-rows-2 md:grid-col-2 md:flex md:gap-1 text-justify\">\r\n                        <h2 className=\"font-bold text-xl\">{Usuario.nombreUsuario}</h2>\r\n                        <h3 className=\"text-xs\">{Usuario.fechaPublicacion}</h3>\r\n                        <h3 className=\"text-xs\">{Usuario.comentariosUsuario}</h3>\r\n                        <div className=\"item-inner-highlight\">......</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Commentary;","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\ItemIngredient\\ItemIngredient.tsx",["161"],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Avatar\\Avatar.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\ContainerSection\\ContainerSection.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Center\\Center.tsx",["162"],"import React, { FunctionComponent } from 'react';\r\n\r\ninterface Props {\r\n    direccion: string;\r\n    className?: string;\r\n    eje?: string;\r\n}\r\n\r\nconst Center: FunctionComponent<Props> = ({ children, direccion, className, eje }) => {\r\n\r\n    const centradoEje = eje == null ? \" items-center | justify-self-center justify-center \" : eje == \"x\" ? \" items-center \" : \" justify-self-center justify-center \"\r\n\r\n    return (\r\n        <div className={\"flex flex-\" + direccion + centradoEje + className}>\r\n            {children}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Center;","C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\TitleRecipe\\TitleRecipe.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Searcher\\Searcher.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Slider\\Slider.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\GridImages\\GridImages.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\pages\\FoodBasket\\FoodBasketAdd.tsx",[],"C:\\Users\\jamav\\Proyects\\JamCook\\src\\components\\Counter\\Counter.tsx",["163","164"],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":12,"column":16,"nodeType":"171","messageId":"172","endLine":12,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":12,"column":16,"nodeType":"171","messageId":"172","endLine":12,"endColumn":23},{"ruleId":"169","severity":1,"message":"173","line":13,"column":16,"nodeType":"171","messageId":"172","endLine":13,"endColumn":23},{"ruleId":"169","severity":1,"message":"174","line":14,"column":20,"nodeType":"171","messageId":"172","endLine":14,"endColumn":31},{"ruleId":"169","severity":1,"message":"175","line":11,"column":18,"nodeType":"171","messageId":"172","endLine":11,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":12,"column":16,"nodeType":"171","messageId":"172","endLine":12,"endColumn":23},{"ruleId":"169","severity":1,"message":"174","line":13,"column":20,"nodeType":"171","messageId":"172","endLine":13,"endColumn":31},{"ruleId":"169","severity":1,"message":"176","line":12,"column":23,"nodeType":"171","messageId":"172","endLine":12,"endColumn":37},{"ruleId":"169","severity":1,"message":"177","line":13,"column":30,"nodeType":"171","messageId":"172","endLine":13,"endColumn":51},{"ruleId":"178","severity":1,"message":"179","line":99,"column":19,"nodeType":"180","messageId":"181","endLine":99,"endColumn":21},{"ruleId":"182","severity":1,"message":"183","line":132,"column":36,"nodeType":"184","messageId":"185","endLine":132,"endColumn":38},{"ruleId":"178","severity":1,"message":"179","line":178,"column":35,"nodeType":"180","messageId":"181","endLine":178,"endColumn":37},{"ruleId":"186","severity":1,"message":"187","line":74,"column":6,"nodeType":"188","endLine":74,"endColumn":8,"suggestions":"189"},{"ruleId":"178","severity":1,"message":"179","line":77,"column":33,"nodeType":"180","messageId":"181","endLine":77,"endColumn":35},{"ruleId":"169","severity":1,"message":"190","line":1,"column":10,"nodeType":"171","messageId":"172","endLine":1,"endColumn":22},{"ruleId":"169","severity":1,"message":"191","line":1,"column":10,"nodeType":"171","messageId":"172","endLine":1,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":14,"column":47,"nodeType":"194","messageId":"181","endLine":14,"endColumn":50},{"ruleId":"169","severity":1,"message":"195","line":1,"column":23,"nodeType":"171","messageId":"172","endLine":1,"endColumn":30},{"ruleId":"178","severity":1,"message":"179","line":11,"column":99,"nodeType":"180","messageId":"181","endLine":11,"endColumn":101},{"ruleId":"192","severity":1,"message":"193","line":7,"column":45,"nodeType":"194","messageId":"181","endLine":7,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":13,"column":19,"nodeType":"180","messageId":"181","endLine":13,"endColumn":21},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"@typescript-eslint/no-unused-vars","'setMail' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setCodigo' is assigned a value but never used.","'setNewPassword' is assigned a value but never used.","'setNewPasswordConfirm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array. You can also do a functional update 'setWidth(w => ...)' if you only need 'width' in the 'setWidth' call.","ArrayExpression",["198"],"'IonSearchbar' is defined but never used.","'IonContent' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'IonItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},"Update the dependencies array to be: [width]",{"range":"201","text":"202"},[2090,2092],"[width]"]