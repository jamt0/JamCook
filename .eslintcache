[{"C:\\Users\\dubst\\Documents\\JamCook\\src\\index.tsx":"1","C:\\Users\\dubst\\Documents\\JamCook\\src\\serviceWorker.ts":"2","C:\\Users\\dubst\\Documents\\JamCook\\src\\App.tsx":"3","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Home\\Home.tsx":"4","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\SignIn\\SignIn.tsx":"5","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\SignUp\\SignUp.tsx":"6","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\ForgetPassword\\ForgetPasswordValidate.tsx":"7","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\ForgetPassword\\ForgetPassword.tsx":"8","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\ForgetPassword\\NewPassword.tsx":"9","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\ListRecipes\\ListRecipes.tsx":"10","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Recipe\\Recipe.tsx":"11","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Welcome\\Welcome.tsx":"12","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Perfil\\Perfil.tsx":"13","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\FoodBasket\\FoodBasket.tsx":"14","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Explore\\Explore.tsx":"15","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Search\\Search.tsx":"16","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Scaffold\\Scaffold.tsx":"17","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\CardRecipe\\CardRecipe.tsx":"18","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\ImageRecipe\\ImageRecipe.tsx":"19","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Button\\Button.tsx":"20","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Searcher\\Searcher.tsx":"21","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\GridImages\\GridImages.tsx":"22","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Slider\\Slider.tsx":"23","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Commentary\\Commentary.tsx":"24"},{"size":470,"mtime":1610932444044,"results":"25","hashOfConfig":"26"},{"size":5358,"mtime":1610932444063,"results":"27","hashOfConfig":"26"},{"size":2363,"mtime":1610932443930,"results":"28","hashOfConfig":"26"},{"size":1885,"mtime":1610932444052,"results":"29","hashOfConfig":"26"},{"size":2469,"mtime":1610932444058,"results":"30","hashOfConfig":"26"},{"size":3430,"mtime":1610932444059,"results":"31","hashOfConfig":"26"},{"size":3303,"mtime":1610932444049,"results":"32","hashOfConfig":"26"},{"size":1804,"mtime":1610932444048,"results":"33","hashOfConfig":"26"},{"size":1826,"mtime":1610932444050,"results":"34","hashOfConfig":"26"},{"size":3991,"mtime":1610932444053,"results":"35","hashOfConfig":"26"},{"size":10744,"mtime":1611127778276,"results":"36","hashOfConfig":"26"},{"size":1741,"mtime":1610935365795,"results":"37","hashOfConfig":"26"},{"size":3867,"mtime":1611017920569,"results":"38","hashOfConfig":"26"},{"size":716,"mtime":1610932444047,"results":"39","hashOfConfig":"26"},{"size":726,"mtime":1610932444046,"results":"40","hashOfConfig":"26"},{"size":2929,"mtime":1610932444057,"results":"41","hashOfConfig":"26"},{"size":1409,"mtime":1611024215484,"results":"42","hashOfConfig":"26"},{"size":3907,"mtime":1611114384062,"results":"43","hashOfConfig":"26"},{"size":874,"mtime":1611026410983,"results":"44","hashOfConfig":"26"},{"size":1274,"mtime":1610932444007,"results":"45","hashOfConfig":"26"},{"size":425,"mtime":1610932444042,"results":"46","hashOfConfig":"26"},{"size":4086,"mtime":1610932444010,"results":"47","hashOfConfig":"26"},{"size":1569,"mtime":1611026474502,"results":"48","hashOfConfig":"26"},{"size":4729,"mtime":1611172550771,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"hk0y0m",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dubst\\Documents\\JamCook\\src\\index.tsx",[],["109","110"],"C:\\Users\\dubst\\Documents\\JamCook\\src\\serviceWorker.ts",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\App.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Home\\Home.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\SignIn\\SignIn.tsx",["111","112"],"import {\r\n  IonItem,\r\n  IonLabel,\r\n  IonInput,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst SignIn: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [mail, setMail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handlerSignInButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handlerSignUpButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handlerForgetPasswordButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/forgetPassword\");\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Inicia sesión\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 max-w-screen-md mx-auto\">\r\n          <Button handler={handlerSignInButton} label={\"Iniciar sesión\"} />\r\n          <div className=\"flex justify-center py-2\">\r\n            <p className=\"mr-1\">¿No tienes una cuenta? </p>\r\n            <Button\r\n              handler={handlerSignUpButton}\r\n              label={\"Registrate.\"}\r\n              type={\"Link\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Correo Electrónico\r\n          </IonLabel>\r\n          <IonInput\r\n            value={mail}\r\n            type=\"email\"\r\n            autocomplete=\"email\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <IonItem>\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Contraseña\r\n          </IonLabel>\r\n          <IonInput\r\n            value={password}\r\n            type=\"password\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <div className=\"flex justify-end pt-6 pb-2\">\r\n          <Button\r\n            handler={handlerForgetPasswordButton}\r\n            label={\"¿Has olvidado tu contraseña?\"}\r\n            type={\"Link\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\SignUp\\SignUp.tsx",["113","114","115"],"import {\r\n  IonItem,\r\n  IonLabel,\r\n  IonInput,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst SignUp: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [mail, setMail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handlerSignInButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/signIn\");\r\n  };\r\n\r\n  const handlerSignUpButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handlerTerminosYCondicionesButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/terminosYCondiciones\");\r\n  };\r\n\r\n  const handlerPoliticaDePrivacidadButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/politicaDePrivacidad\");\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Crear Cuenta\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 max-w-screen-md mx-auto\">\r\n          <Button handler={handlerSignUpButton} label={\"Crear cuenta\"} />\r\n          <div className=\"flex justify-center py-2\">\r\n            <p className=\"mr-1 text-base inline\">¿Ya tienes una cuenta? </p>\r\n            <Button\r\n              handler={handlerSignInButton}\r\n              label={\"Inicia sesión.\"}\r\n              type={\"Link\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Nombres\r\n          </IonLabel>\r\n          <IonInput\r\n            value={name}\r\n            type=\"text\"\r\n            autocomplete=\"name\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Correo Electrónico\r\n          </IonLabel>\r\n          <IonInput\r\n            value={mail}\r\n            type=\"email\"\r\n            autocomplete=\"email\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <IonItem>\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Contraseña\r\n          </IonLabel>\r\n          <IonInput\r\n            value={password}\r\n            type=\"password\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"mt-8 mb-4 text-center\">\r\n            <p className=\"mr-1 text-base inline\">\r\n              Al registrarte, aceptas nuestros\r\n            </p>\r\n            <Button\r\n              handler={handlerTerminosYCondicionesButton}\r\n              label={\"Terminos y condiciones\"}\r\n              type={\"Link\"}\r\n            />\r\n            <p className=\"mx-1 text-base inline\">y</p>\r\n            <Button\r\n              handler={handlerPoliticaDePrivacidadButton}\r\n              label={\"Política de Privacidad.\"}\r\n              type={\"Link\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\ForgetPassword\\ForgetPasswordValidate.tsx",["116"],"import {\r\n  IonInput,\r\n  IonItem,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst ForgetPasswordValidate: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [codigo, setCodigo] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n\r\n  const handlerForgetPasswordValidateButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/newPassword\");\r\n  };\r\n\r\n  const handlerResendMailButton = (e: any) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Restablecer Contraseña\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 mb-2 max-w-screen-md mx-auto\">\r\n          <Button\r\n            handler={handlerForgetPasswordValidateButton}\r\n            label={\"Restablecer Contraseña\"}\r\n          />\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <p className=\"text-base text-center font-bold mt-6\">\r\n          Consulta tu correo\r\n        </p>\r\n        <p className=\"mx-1 mb-4 text-base text-center md:text-left\">\r\n          Introduce codigo de verificación o entra al vinculo que hemos enviado\r\n          a tu correo electrónico.\r\n        </p>\r\n        <IonItem className=\"mt-8 mb-4\">\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[0]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[1]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[2]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[3]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[4]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n          <IonInput\r\n            type=\"number\"\r\n            value={codigo[5]}\r\n            placeholder=\"0\"\r\n            maxlength={1}\r\n            min=\"0\"\r\n            max=\"9\"\r\n            className=\"text-xl text-center\"\r\n          ></IonInput>\r\n        </IonItem>\r\n        <div className=\"flex justify-end\">\r\n          <Button\r\n            handler={handlerResendMailButton}\r\n            label={\"¿No recibiste el correo?\"}\r\n            type={\"Link\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordValidate;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\ForgetPassword\\ForgetPassword.tsx",["117"],"import {\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst ForgetPassword: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [mail, setMail] = useState(\"\");\r\n\r\n  const handlerForgetPasswordButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/forgetPasswordValidate\");\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Restablecer Contraseña\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 mb-2 max-w-screen-md mx-auto\">\r\n          <Button\r\n            handler={handlerForgetPasswordButton}\r\n            label={\"Restablecer Contraseña\"}\r\n          />\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <p className=\"text-base text-center font-bold mt-6\">\r\n          ¿Has olvidado tu contraseña?{\" \"}\r\n        </p>\r\n        <p className=\"mx-auto mb-4 text-base text-center\">\r\n          Introduce tu dirección de correo electrónico y te enviaremos un enlace\r\n          para restablecer tu contraseña.\r\n        </p>\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Correo Electrónico\r\n          </IonLabel>\r\n          <IonInput\r\n            value={mail}\r\n            type=\"email\"\r\n            autocomplete=\"email\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\ForgetPassword\\NewPassword.tsx",["118","119"],"import {\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\n\r\nconst NewPassword: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordConfirm, setNewPasswordConfirm] = useState(\"\");\r\n\r\n  const handlerNewPasswordButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      tituloHeader=\"Restablecer Contraseña\"\r\n      onClickBack={handlerGoBackButton}\r\n      footer={\r\n        <div className=\"p-2 mb-2 max-w-screen-md mx-auto\">\r\n          <Button\r\n            handler={handlerNewPasswordButton}\r\n            label={\"Restablecer Contraseña\"}\r\n          />\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"max-w-screen-md mx-auto p-4 h-full\">\r\n        <IonItem className=\"mb-4 \">\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Nueva Contraseña\r\n          </IonLabel>\r\n          <IonInput\r\n            value={newPassword}\r\n            type=\"password\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n        <IonItem>\r\n          <IonLabel position=\"floating\" color=\"primary\">\r\n            Confirme Contraseña\r\n          </IonLabel>\r\n          <IonInput\r\n            value={newPasswordConfirm}\r\n            type=\"password\"\r\n            className=\"mt-2\"\r\n            required\r\n          ></IonInput>\r\n        </IonItem>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\ListRecipes\\ListRecipes.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Recipe\\Recipe.tsx",["120","121"],"import { IonButton, IonButtons, IonIcon } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport ImageRecipe from \"../../components/ImageRecipe/ImageRecipe\";\r\nimport Scaffold from \"../../components/Scaffold/Scaffold\";\r\nimport {\r\n  star,\r\n  timerOutline,\r\n  nutritionOutline,\r\n  starOutline,\r\n  arrowRedoOutline,\r\n  bookmarkOutline,\r\n  heartOutline,\r\n  speedometerOutline,\r\n} from \"ionicons/icons\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Commentary from \"../../components/Commentary/Commentary\";\r\n\r\nconst receta = {\r\n  pathImg: \"https://picsum.photos/200/300?random=1\",\r\n  avatarUser: \"https://picsum.photos/200/300?random=2\",\r\n  titulo: \"Tacos Mexicanos de Carnitas\",\r\n  nameUser: \"Jonathan Mancera\",\r\n  valoracion: [1, 1, 1, 1, 0],\r\n  numeroValoraciones: \"78\",\r\n  introduccion:\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum. Phasellus ex justo, gravida vitae nisl vitae, iaculis placerat massa.\",\r\n  ingredientes: [\r\n    {\r\n      name: \"Zanahoria\",\r\n      pathImg: \"https://picsum.photos/200/300?random=3\",\r\n      cantidadPorcion: \"3\",\r\n    },\r\n    {\r\n      name: \"Tomate\",\r\n      pathImg: \"https://picsum.photos/200/300?random=4\",\r\n      cantidadPorcion: \"3\",\r\n    },\r\n    {\r\n      name: \"Pechuga de Pollo\",\r\n      pathImg: \"https://picsum.photos/200/300?random=5\",\r\n      cantidadPorcion: \"3\",\r\n    },\r\n    {\r\n      name: \"Arroz\",\r\n      pathImg: \"https://picsum.photos/200/300?random=6\",\r\n      cantidadPorcion: \"3\",\r\n    },\r\n  ],\r\n  pasos: [\r\n    {\r\n      instruccion: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n    {\r\n      instruccion: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n    {\r\n      instruccion: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n    {\r\n      instruccion: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    }\r\n  ],\r\n  trucos: [\r\n    {\r\n      instruccion: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    },\r\n    {\r\n      instruccion: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lobortis enim erat, et egestas urna ultricies dictum.\",\r\n    }\r\n  ]\r\n};\r\n\r\nconst Recipe: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n  const [porciones, setPorciones] = useState(1);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [classPorciones, setClassPorciones] = useState(\" \");\r\n  const [isEstrellas, setEstrellas] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (porciones == 1) {\r\n      setClassPorciones(\" bg-opacity-25 \")\r\n      setIsDisabled(true)\r\n    } else {\r\n      setClassPorciones(\" \")\r\n      setIsDisabled(false)\r\n    }\r\n  }, [porciones])\r\n\r\n  const handlerGoBackButton = (e: any) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  const handlerShare = (e: any) => {\r\n  };\r\n\r\n  const handlerLike = (e: any) => {\r\n  };\r\n\r\n  const handlerMark = (e: any) => {\r\n  };\r\n\r\n  const handlerSuma = (e: any) => {\r\n    setPorciones(porciones + 1)\r\n  };\r\n\r\n  const handlerResta = (e: any) => {\r\n    setPorciones(porciones - 1)\r\n  };\r\n\r\n  const handlerRecetaHecha = (e: any) => {\r\n  };\r\n\r\n  const handlerValoracion = (e: any) => {\r\n    e.preventDefault();\r\n    setEstrellas(!isEstrellas)\r\n    return undefined;\r\n  };\r\n\r\n  return (\r\n    <Scaffold\r\n      onClickBack={handlerGoBackButton}\r\n      accionesHeader={\r\n        <>\r\n          <IonButton onClick={handlerShare}>\r\n            <IonIcon slot=\"icon-only\" icon={arrowRedoOutline} color=\"dark\" />\r\n          </IonButton>\r\n          <IonButton onClick={handlerLike}>\r\n            <IonIcon slot=\"icon-only\" icon={heartOutline} color=\"dark\" />\r\n          </IonButton>\r\n          <IonButton onClick={handlerMark}>\r\n            <IonIcon slot=\"icon-only\" icon={bookmarkOutline} color=\"dark\" />\r\n          </IonButton>\r\n        </>\r\n      }\r\n    >\r\n      <ImageRecipe pathImg={receta.pathImg} height={72} sinRedondeo={true}>\r\n        <h6 className=\"text-white text-center text-2xl md:text-2xl text-left mx-auto my-auto\">\r\n          {receta.titulo}\r\n        </h6>\r\n      </ImageRecipe>\r\n      <div className=\"max-w-screen-md mx-auto\">\r\n        <div className=\"flex flex-col items-center mt-3\">\r\n          <div\r\n            className=\"h-8 w-8 bg-cover bg-center rounded-full\"\r\n            style={{ backgroundImage: `url( ${receta.avatarUser} )` }}\r\n          ></div>\r\n          <h2 className=\"text-sm mt-2 font-bold\">{receta.nameUser}</h2>\r\n          <div className=\"flex flex-row mt-2\">\r\n            {receta.valoracion.map((element, index) => {\r\n              return (\r\n                <IonIcon\r\n                  key={index}\r\n                  icon={element == 1 ? star : starOutline}\r\n                  className=\"text-purple-500 text-sm ml-1\"\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <h2 className=\"text-sm mt-2\">\r\n            {receta.numeroValoraciones + \" Valoraciones\"}\r\n          </h2>\r\n        </div>\r\n        <div className=\"flex flex-col items-center mt-4 mx-3\">\r\n          <h2 className=\"text-xl font-bold\">Introducción</h2>\r\n          <p className=\"text-center mt-2\">{receta.introduccion}</p>\r\n        </div>\r\n        <div className=\"grid grid-cols-3 my-6\">\r\n          <div className=\"flex flex-row justify-self-center\">\r\n            <IonIcon\r\n              icon={nutritionOutline}\r\n              className=\"text-black text-lg mr-1\"\r\n            />\r\n            <h3 className=\"text-sm\">8 ingredientes</h3>\r\n          </div>\r\n          <div className=\"flex flex-row justify-self-center\">\r\n            <IonIcon\r\n              icon={speedometerOutline}\r\n              className=\"text-black text-lg mr-1\"\r\n            />\r\n            <h3 className=\"text-sm\">Dificultad</h3>\r\n          </div>\r\n          <div className=\"flex flex-row justify-self-center\">\r\n            <IonIcon icon={timerOutline} className=\"text-black text-lg mr-1\" />\r\n            <h3 className=\"text-sm\">25 minutos</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col items-center mt-4 mx-3\">\r\n          <h2 className=\"text-lg font-bold text-center mb-3\">Porciones a Preparar</h2>\r\n          <div className=\"p-2 mb-2 flex flex-row w-full md:w-1/2\">\r\n            <button className={\"bg-purple-300 h-12 w-12 rounded-l-md\" + classPorciones} onClick={handlerResta} disabled={isDisabled}>\r\n              <p className=\"text-white\">{\"<\"}</p>\r\n            </button>\r\n            <div className=\"h-12 w-full bg-gray-100 flex items-center\">\r\n              <h3 className=\"text-black mx-auto flex text-center\">{porciones}</h3>\r\n            </div>\r\n            <button className=\"bg-purple-300 h-12 w-12 rounded-r-md\" onClick={handlerSuma}>\r\n              <p className=\"text-white\">{\">\"}</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"px-3 mb-8\">\r\n          <h2 className=\"text-lg font-bold text-center mb-3 mt-3\">Ingredientes</h2>\r\n          {receta.ingredientes.map((ingrediente, index) => {\r\n            return (\r\n              <div className=\"grid grid-flow-col auto-cols-max p-2 bg-gray-100 mb-2 rounded-md\" key={index}>\r\n                <div\r\n                  className=\"h-12 w-12 bg-cover bg-center mr-4\"\r\n                  style={{ backgroundImage: `url( ${ingrediente.pathImg} )` }}\r\n                ></div>\r\n                <div>\r\n                  <h2 className=\"font-bold text-sm\">{ingrediente.name}</h2>\r\n                  <h3 className=\"text-sm\">{ingrediente.cantidadPorcion + \" Unidades\"}</h3>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"px-3 mb-8\">\r\n          <h2 className=\"text-lg font-bold text-center mb-3\">Pasos</h2>\r\n          {receta.pasos.map((paso, index) => {\r\n            return (\r\n              <div className=\"p-2 bg-gray-100 mb-2 rounded-md\" key={index}>\r\n                <h3 className=\"text-sm\">{paso.instruccion}</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"px-3 mb-8\">\r\n          <h2 className=\"text-lg font-bold text-center mb-3\">Trucos y Consejos</h2>\r\n          {receta.trucos.map((truco, index) => {\r\n            return (\r\n              <div className=\"p-2 bg-gray-100 mb-2 rounded-md\" key={index}>\r\n                <h3 className=\"text-sm\">{truco.instruccion}</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h2 className=\"text-lg font-bold text-center mb-3 p-4\">¿Ya has hecho la receta?</h2>\r\n        <div className=\"flex mx-center w-1/2 mb-6\">\r\n          <Button handler={handlerRecetaHecha} label={\"¡Receta Hecha!\"} type={\"Secundario\"} />\r\n        </div>\r\n        <h2 className=\"text-lg font-bold text-center mb-3 mt-3 p-4\">¿Te ha gustado la receta?</h2>\r\n        \r\n        <div className=\"grid grid-flow-col mx-2 my-1 py-1\">\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={(e) => handlerValoracion(e, )}>\r\n                <IonIcon icon={isEstrellas? star : starOutline} color=\"dark\" className=\"text-black text-4xl -ml-2 -mr-2\"/>\r\n              </IonButton>\r\n            </IonButtons>\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={(e) => handlerValoracion(e, )}>\r\n                <IonIcon icon={isEstrellas? star : starOutline} color=\"dark\" className=\"text-black text-4xl -ml-2 -mr-2\"/>\r\n              </IonButton>\r\n            </IonButtons>\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={(e) => handlerValoracion(e, )}>\r\n                <IonIcon icon={isEstrellas? star : starOutline} color=\"dark\" className=\"text-black text-4xl -ml-2 -mr-2\"/>\r\n              </IonButton>\r\n            </IonButtons>\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={(e) => handlerValoracion(e, )}>\r\n                <IonIcon icon={isEstrellas? star : starOutline} color=\"dark\" className=\"text-black text-4xl -ml-2 -mr-2\"/>\r\n              </IonButton>\r\n            </IonButtons>\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={(e) => handlerValoracion(e, )}>\r\n                <IonIcon icon={isEstrellas? star : starOutline} color=\"dark\" className=\"text-black text-4xl -ml-2 -mr-2\"/>\r\n              </IonButton>\r\n            </IonButtons>\r\n          </div>\r\n         \r\n        <Commentary/>\r\n      </div>\r\n    </Scaffold>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Welcome\\Welcome.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Perfil\\Perfil.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\FoodBasket\\FoodBasket.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Explore\\Explore.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\pages\\Search\\Search.tsx",["122"],"import { IonContent, IonPage } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Slider from \"../../components/Slider/Slider\";\r\nimport Searcher from \"../../components/Searcher/Searcher\";\r\n\r\nconst imagenes = [\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=1\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=2\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=3\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=4\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=5\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=6\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=7\",\r\n    titulo: \"Tacos Mexicanos de Carnitas Asadas\",\r\n  },\r\n];\r\n\r\nconst Search: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [slidesPerView, setslidesPerView] = useState(1.5);\r\n\r\n  function handleResize() {\r\n    setWidth(window.innerWidth);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    if (width >= 568) {\r\n      setslidesPerView(2.5);\r\n    } else {\r\n      setslidesPerView(1.5);\r\n    }\r\n    if (width >= 768) {\r\n      setslidesPerView(3.5);\r\n    }\r\n    if (width >= 1024) {\r\n      setslidesPerView(4.5);\r\n    }\r\n    if (width >= 1280) {\r\n      setslidesPerView(5.5);\r\n    }\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize)\r\n    }\r\n  }, [width, slidesPerView]);\r\n\r\n  //Esto debe tener una solucion mejor\r\n  useEffect(() => {\r\n    setWidth(width+1);\r\n    setTimeout(handleResize,1000);\r\n    setTimeout(handleResize,3000);\r\n    setTimeout(handleResize,5000);\r\n    setTimeout(handleResize,10000);\r\n  }, []);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent>\r\n        <div className=\"flex flex-col max-w-screen-md mx-auto pt-8 text-center text-gray-600 text-2xl md:text-3xl font-bold\">\r\n          <h6>Las mejores recetas,</h6>\r\n          <h6>con lo que tienes a mano</h6>\r\n        </div>\r\n        <Searcher placeHolder={\"Buscar recetas con tus ingredientes\"} />\r\n        <div className=\"px-2\">\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n          <Slider imagenes={imagenes} slidesPerView={slidesPerView} />\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Scaffold\\Scaffold.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\CardRecipe\\CardRecipe.tsx",["123"],"import React, { FunctionComponent, useState } from \"react\";\r\nimport {\r\n  star,\r\n  timerOutline,\r\n  nutritionOutline,\r\n  starOutline,\r\n  arrowRedoOutline,\r\n  bookmarkOutline,\r\n  bookmark,\r\n  heartOutline,\r\n  heart\r\n} from \"ionicons/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IonButton, IonButtons, IonCard, IonIcon } from \"@ionic/react\";\r\nimport ImageRecipe from \"../ImageRecipe/ImageRecipe\";\r\n\r\ninterface Props {\r\n  avatarUser: string;\r\n  nameUser: string;\r\n  titulo: string;\r\n  pathImg: string;\r\n  meGusta: string;\r\n  valoracion: number[];\r\n}\r\n\r\nconst CardRecipe: FunctionComponent<Props> = ({\r\n  avatarUser,\r\n  nameUser,\r\n  titulo,\r\n  pathImg,\r\n  valoracion,\r\n  meGusta,\r\n}) => {\r\n\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [isMarked, setIsMarked] = useState(false);\r\n\r\n  const handlerLikeButton = (e: any) => {\r\n    e.preventDefault();\r\n    setIsLiked(!isLiked)\r\n  };\r\n  const handlerShareButton = (e: any) => {\r\n    e.preventDefault();\r\n  };\r\n  const handlerFavButton = (e: any) => {\r\n    e.preventDefault();\r\n    setIsMarked(!isMarked)\r\n  };\r\n\r\n  return (\r\n    <IonCard>\r\n      <Link to=\"/recipe\" className=\"w-full\">\r\n        <div className=\"grid grid-flow-col mx-2 my-1\">\r\n          <div className=\"flex flex-row\">\r\n            <div\r\n              className=\"h-8 w-8 bg-cover bg-center rounded-full\"\r\n              style={{ backgroundImage: `url( ${avatarUser} )` }}\r\n            ></div>\r\n            <h2 className=\"text-lg ml-2 mt-1\">{nameUser}</h2>\r\n          </div>\r\n          <div className=\"justify-self-end grid grid-flow-col mt-1\">\r\n            <IonIcon\r\n              icon={nutritionOutline}\r\n              className=\"text-black text-base mt-1 mr-1\"\r\n            />\r\n            <h3 className=\"text-lg mr-3\">8</h3>\r\n            <IonIcon\r\n              icon={timerOutline}\r\n              className=\"text-black text-base mt-1 mr-1\"\r\n            />\r\n            <h3 className=\"text-lg\">25'</h3>\r\n          </div>\r\n        </div>\r\n        <ImageRecipe pathImg={pathImg} height={60}>\r\n          <div className=\"flex flex-row\">\r\n            {valoracion.map((element, index) => {\r\n              return (\r\n                <IonIcon\r\n                  key={index}\r\n                  icon={element == 1 ? star : starOutline}\r\n                  className=\"text-white text-xl self-end ml-1\"\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <h6 className=\"text-white text-base md:text-xl text-left mx-1 mt-1\">\r\n            {titulo}\r\n          </h6>\r\n        </ImageRecipe>\r\n        <div className=\"grid grid-flow-col mx-2 my-1 py-1\">\r\n          <div className=\"flex flex-row\">\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={handlerShareButton}>\r\n                <IonIcon\r\n                  icon={arrowRedoOutline}\r\n                  className=\"text-black text-4xl my-auto -ml-2 -mr-2\"\r\n                />\r\n              </IonButton>\r\n            </IonButtons>\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={handlerLikeButton}>\r\n                <IonIcon\r\n                  icon={isLiked? heart : heartOutline}\r\n                  className=\"text-black text-4xl my-auto -ml-2 -mr-1\"\r\n                />\r\n              </IonButton>\r\n            </IonButtons>\r\n            <h3 className=\"text-xl my-px inline-block align-baseline pt-1\">\r\n              {meGusta}\r\n            </h3>\r\n          </div>\r\n          <div className=\"justify-self-end grid grid-flow-col\">\r\n            <IonButtons slot=\"start\">\r\n              <IonButton onClick={handlerFavButton}>\r\n                <IonIcon\r\n                  icon={isMarked? bookmark: bookmarkOutline}\r\n                  className=\"text-black text-4xl -ml-2 -mr-2\"\r\n                />\r\n              </IonButton>\r\n            </IonButtons>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </IonCard>\r\n  );\r\n};\r\n\r\nexport default CardRecipe;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\ImageRecipe\\ImageRecipe.tsx",["124"],"import { IonSearchbar } from \"@ionic/react\";\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\ninterface Props {\r\n  sinRedondeo?: boolean; \r\n  pathImg: string;\r\n  height: number;\r\n}\r\n\r\nconst ImageRecipe: FunctionComponent<Props> = ({\r\n  pathImg,\r\n  children,\r\n  height,\r\n  sinRedondeo = false, \r\n}) => {\r\n  const redondeo = sinRedondeo ? \" \" : \" rounded-md \"\r\n  return (\r\n    <div className=\"relative flex\">\r\n      {children != null && (\r\n        <div className={\"self-end absolute m-auto z-20 grid grid-flow-row\" + redondeo + \"bg-black bg-opacity-50 h-20 w-full px-2\"}>\r\n          {children}\r\n        </div>\r\n      )}\r\n      <div\r\n        className={\"h-\" + height + \" w-full bg-cover bg-center z-10\" + redondeo + \"bg-gray-500 bg-opacity-50\"}\r\n        style={{ backgroundImage: `url( ${pathImg} )` }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageRecipe;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Button\\Button.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Searcher\\Searcher.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\GridImages\\GridImages.tsx",["125"],"import { IonIcon } from \"@ionic/react\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { fastFoodOutline } from \"ionicons/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ImageRecipe from \"../ImageRecipe/ImageRecipe\";\r\n\r\ninterface Props {}\r\n\r\nconst imagenes = [\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=1\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos de Carnitas\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=2\",\r\n    icon: \"Tacos Mexicanos\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=3\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=4\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=5\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=6\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=7\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=4\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=5\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=6\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=7\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=7\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=1\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=2\",\r\n    icon: \"Tacos Mexicanos\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=3\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=4\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=5\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=6\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n  {\r\n    pathImg: \"https://picsum.photos/200/300?random=7\",\r\n    icon: \"Tacos Mexicanos de Carnitas Asadas\",\r\n    titulo: \"Tacos Mexicanos\",\r\n  },\r\n];\r\n\r\nconst GridImages: FunctionComponent<Props> = ({}) => {\r\n  return (\r\n    <div className=\"grid gap-4 grid-cols-2 mx-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5\">\r\n      {imagenes.map((imagen, index) => {\r\n        return (\r\n          <Link to=\"/recipe\" className=\"w-full\" key={index}>\r\n            <div className=\"relative\">\r\n              <div className=\"absolute m-auto z-20 grid grid-flow-row rounded-md bg-black bg-opacity-50 hover:rounded-md hover:bg-purple-700 hover:bg-opacity-25 h-full w-full\">\r\n                <IonIcon\r\n                  icon={fastFoodOutline}\r\n                  className=\"place-self-end mx-auto text-white text-5xl\"\r\n                />\r\n                <h6 className=\"text-white text-base md:text-xl text-center mx-1\">\r\n                  {imagen.titulo}\r\n                </h6>\r\n              </div>\r\n              <ImageRecipe pathImg={imagen.pathImg} height={40}/>\r\n            </div>\r\n          </Link>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridImages;\r\n","C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Slider\\Slider.tsx",[],"C:\\Users\\dubst\\Documents\\JamCook\\src\\components\\Commentary\\Commentary.tsx",["126","127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":12,"column":16,"nodeType":"134","messageId":"135","endLine":12,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":13,"column":20,"nodeType":"134","messageId":"135","endLine":13,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":12,"column":16,"nodeType":"134","messageId":"135","endLine":12,"endColumn":23},{"ruleId":"132","severity":1,"message":"137","line":13,"column":16,"nodeType":"134","messageId":"135","endLine":13,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":14,"column":20,"nodeType":"134","messageId":"135","endLine":14,"endColumn":31},{"ruleId":"132","severity":1,"message":"138","line":11,"column":18,"nodeType":"134","messageId":"135","endLine":11,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":12,"column":16,"nodeType":"134","messageId":"135","endLine":12,"endColumn":23},{"ruleId":"132","severity":1,"message":"139","line":12,"column":23,"nodeType":"134","messageId":"135","endLine":12,"endColumn":37},{"ruleId":"132","severity":1,"message":"140","line":13,"column":30,"nodeType":"134","messageId":"135","endLine":13,"endColumn":51},{"ruleId":"141","severity":1,"message":"142","line":82,"column":19,"nodeType":"143","messageId":"144","endLine":82,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":156,"column":33,"nodeType":"143","messageId":"144","endLine":156,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":74,"column":6,"nodeType":"147","endLine":74,"endColumn":8,"suggestions":"148"},{"ruleId":"141","severity":1,"message":"142","line":80,"column":33,"nodeType":"143","messageId":"144","endLine":80,"endColumn":35},{"ruleId":"132","severity":1,"message":"149","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":107,"column":47,"nodeType":"152","messageId":"144","endLine":107,"endColumn":49},{"ruleId":"132","severity":1,"message":"153","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":14,"column":47,"nodeType":"152","messageId":"144","endLine":14,"endColumn":50},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"@typescript-eslint/no-unused-vars","'setMail' is assigned a value but never used.","Identifier","unusedVar","'setPassword' is assigned a value but never used.","'setName' is assigned a value but never used.","'setCodigo' is assigned a value but never used.","'setNewPassword' is assigned a value but never used.","'setNewPasswordConfirm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array. You can also do a functional update 'setWidth(w => ...)' if you only need 'width' in the 'setWidth' call.","ArrayExpression",["156"],"'IonSearchbar' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'IonContent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},"Update the dependencies array to be: [width]",{"range":"159","text":"160"},[2090,2092],"[width]"]